- merge resolveSelector / toSelector
  - we just want toSelector
  - after all of that: check if we can just not call resolveSelector from code before up.replace

- compatibility layer
  - upgrade makandracards.com with the jquery compatibility layer to see if it's convenient enough

- Check if we really need to do e.get(...) in every single function that works with elements
  - Do we really need to support `elementOrSelector` instead of just `element` in the public API?
  - note that e.get() also converts jquery down to elements. do we want to support this for public API?

- complete (and maybe unify) link variant parsing options
  - can FollowVariant do most defaults?
  - Remove 'none' default for animation options in link.follow etc.
  - Remove 'auto' default from { layer, failLayer } in link, modal, popup
  - New options
    - support new reveal options for up.replace and all follow variants
    - who parses [up-scroll-behavior] and [up-scroll-speed] from <links>?
    - up-target should support [up-reveal-padding], { revealPadding }

- grep for TODO comments

- Update docs
  - Write CHANGELOG from diff

  - check if the main entries for renamed modules still work
    - up.fragment
    - up.layout

  - API comments
    - Examples with $
    - Stuff like  @param {jQuery} event.link
    - document new stuff like up.$compiler

  - check if we can publish new functions
  - check if we can more up.viewport functions

  - unpoly.com
    - remove mentions of jquery from unpoly.com
      - "no dependencies"
      - installtion guide
    - migration guide
      - jquery event listeners need to use addEventListener or use event.originalEvent
    - redirect /up.layout to /up.viewport
    - redirect /up.dom to /up.fragment

- upgrade roca-style.org PR
  - better claim
  - no jquery


New features (postponable)
--------------------------

- support smooth-scrolling to an existing #anchor in the current page, to justify all that animation code
  - basically [up-follow] should check:
    - if the link href includes "#"
      - is the (normalized source of the target | the current URL) the URL of the link (or is it only a hash)
      - does the hash anchor exist in the current page
      - if yes, scroll to it and resolve the replacemnet
      - if no, do a usual replacement
