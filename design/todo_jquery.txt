- compatibility layer
  - think whether we want to keep $macro and $compiler
    - yes
    - make sure there are tests
  - build and test up.$on()
- Update docs
  - Examples with $
  - Stuff like  @param {jQuery} event.link
  - document new stuff like up.$compiler
- Check if we really need to do e.get(...) in every single function that works with elements
  - Do we really need to support `elementOrSelector` instead of just `element` in the public API?
- unify link variant parsing
  - can FollowVariant do most defaults?
  - Remove 'none' default for animation options in link.follow etc.
  - Remove 'auto' default from { layer, failLayer } in link, modal, popup
  - who parses [up-scroll-behavior] and [up-scroll-speed] from <links>?
  - support new reveal options for up.replace and all follow variants
- grep for TODO comments
- scrolling to #hash should also find [up-id], to prevent jumping of browser (which does not remove obstructions and will probably jump before up.reveal starts)
- rename up.dom to up.fragment
- rename up.layout to up.viewport
- move up.browser.documentViewport and documentViewportSelector to up.layout
- up-target should support [up-reveal-padding], { revealPadding }
- keepPlans should have properties { oldFragment } and { newFragment } instead of { element } and { newElement }
- extractPlans should have properties { oldFragment } and { newFragment } instead of { oldElement } and { newElement }
- Write CHANGELOG from diff

- unpoly.com
  - remove mentions of jquery from unpoly.com
    - "no dependencies"
    - installtion guide
  - migration guide
    - jquery event listeners need to use addEventListener or use event.originalEvent
- upgrade makandracards.com with the jquery compatibility layer

- upgrade roca-style.org PR
  - better claim
  - no jquery



New features (postponable)
--------------------------

- support smooth-scrolling to an existing #anchor in the current page, to justify all that animation code
  - basically [up-follow] should check:
    - if the link href includes "#"
      - is the (normalized source of the target | the current URL) the URL of the link (or is it only a hash)
      - does the hash anchor exist in the current page
      - if yes, scroll to it and resolve the replacemnet
      - if no, do a usual replacement
